#!/usr/bin/env python3

import getopt, sys

def help():
    print('This utility is intended to create round robin sfz mappings for percussion instruments')
    print('Example usage:')
    print('')
    print('    generate-rr-sfz -p my_wave_file_prefix -r 2 -v 7')
    print('')
    print('Generates sfz mappings for samples starting with my_wave_file_prefix. Assumes the')
    print('naming convention end with a suffix like _a_02.wav in which _a, _b, etc. represent')
    print('round robins and _01, _02, etc. represent velocity layers')
    sys.exit(2)

try:
    opts, args = getopt.getopt(sys.argv[1:], "p:r:v:")
except getopt.GetoptError:
    help()

prefix = None
round_robins = None
velocities = None

for o, v in opts:
    if o == "-p":
        prefix = v
    if o == "-r":
        round_robins = int(v)
    if o == "-v":
        velocities = int(v)

if prefix is None or round_robins is None or velocities is None:
    help()

round_robin_names = "abcdefghijklmnopqrstuvwxyz"

for v in range(velocities):

    lovel = int(v * (127 / velocities))
    hivel = int((v + 1) * (127 / velocities))
    if hivel > 127:
        hivel = 127

    for r in range(round_robins):
        print('<region>')
        print('sample=' + prefix + "_" + round_robin_names[r] + "_" + "%02d" % (v + 1,) + ".wav")
        if lovel != 0:
            print('lovel=' + str(lovel))
        if hivel != 127:
            print('hivel=' + str(hivel))
        print('seq_length=' + str(round_robins))
        if r > 0:
            print('seq_position=' + str(r + 1))
        print('')
